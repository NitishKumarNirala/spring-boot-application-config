/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */
buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
		projectName = 'Test'
	}
	repositories {
// 		jcenter()
   		mavenCentral()
  	}

  	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6'
  	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

apply plugin: "jacoco" // https://docs.gradle.org/current/userguide/jacoco_plugin.html
// apply plugin: 'build-dashboard' // https://docs.gradle.org/current/userguide/build_dashboard_plugin.html
apply plugin: 'project-report' // https://docs.gradle.org/current/userguide/project_report_plugin.html

if (rootProject == project) {
	apply plugin: 'org.sonarqube'
}

group = 'com.tagit.digital.commons.dbma'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

if (rootProject == project) { // wrap tasks that are only available if executed as the gradle root project
	wrapper {
		gradleVersion = '4.10.2'
	}
	
	sonarqube {
 		properties {
  			property "sonar.host.url", "http://172.17.0.140:9000/tagit/sonar/"
  		}
	}
	

	jacoco {
    	toolVersion = "0.8.1" //jacoco version
    	reportsDir = file("$buildDir/reports/jacoco") //default directory where jacoco generates test reports
	}	
	
	//if you want to use custom report then uncomment below task //use command "gradle build jacocoTestReport" to generate reports using below task

	jacocoTestReport {
		afterEvaluate {
   			classDirectories = files(classDirectories.files.collect {
      		fileTree(dir: it, exclude: [
        		'**/api/biz/domain/**',
        		'**/api/host/domain/**',
        		'**/api/util/**',
  	      		'**/api/web/rest/dto/**',
  	      		'**/api/biz/service/util/**',
          		'**/api/db/domain/**',
          		'**/api/config/jpa/**',
          		'**/api/web/config/**',
         	 	'**/api/constants/**',
         	 	'**/api/web/rest/hateos/**'
      			])
    		})
		}
	    reports {
    	    xml.enabled true
     	   csv.enabled true
     	   html.destination "${buildDir}/jacocoHtml"
    	}   
	}	
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
//    jcenter()
	mavenCentral()
	// maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' } // for Swagger 3.0.0-SNAPSHOT	
}

configurations {
	providedRuntime
	compile.exclude module: 'spring-boot-starter-logging' // to replace with log4j2 and fix the exception Exception in thread "main" java.lang.StackOverflowError at org.apache.logging.log4j.util.StackLocator.getCallerClass(StackLocator.java:112)
	//compile.exclude module: 'junit' // TODO: to replace with JUnit Jupiter, JUnit 4.12 used by TagitCore AbstractBizServiceTest 
//	compile.exclude module: 'hibernate-validator'
//	compile.exclude module: 'spring-boot-starter-json' // to replace with gson // [rj.added 2018.12.04] removing causes problems with io.springfox and spring-boot-starter-actuator: Error creating bean with name 'objectMapperConfigurer'
}

dependencies {

	// ### Logging: Log4J2 with Async Support ###
	compile('org.apache.logging.log4j:log4j-jcl:2.11.1') // Apache Commons Logging Bridge to Log4J2 
//	compile('log4j:log4j:1.2.17')
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
	compile('org.springframework.boot:spring-boot-starter-log4j2')
	compile('com.lmax:disruptor:3.4.2')
	compile('org.reactivestreams:reactive-streams:1.0.1') // JBoss 7.0 and 7.1 requirement for some reason

	// ### Rest Services ###
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
//	compile('org.springframework.boot:spring-boot-starter-web')
//	compile('org.springframework.boot:spring-boot-starter-data-rest') // [rj.commented 2018.12.03] spring data rest *not* consistent with expected results
	compile('org.springframework.boot:spring-boot-starter-web') { 	
//		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-json' // to replace with gson, required by Swagger UI (uncomment if not using Swagger UI)
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat' // not required in TagitCoreRest, use Java EE Servlet API instead
	}  
	compile('org.springframework.boot:spring-boot-starter-hateoas') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web' // use above dependency instead of the one bundled with spring-boot-starter-hateoas
	}  
	
//	{ 	exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind' // to replace with gson } // [rj.commented 2018.12.04] removing causes problems with io.springfox and spring-boot-starter-actuator

	// ### Aspects (Logging) ###
    compile('org.springframework.boot:spring-boot-starter-aop')

	// ### Swagger Documentation ###
	// swagger2-2.9.2 do not support spring-boot-starter-data-rest:2.1.0-RELEASE
//	compile ('io.springfox:springfox-swagger2:3.0.0-SNAPSHOT')
//	compile ('io.springfox:springfox-swagger-ui:3.0.0-SNAPSHOT')
//	compile ('io.springfox:springfox-data-rest:3.0.0-SNAPSHOT')
	
    compile('io.springfox:springfox-swagger2:2.9.2')
	compile('io.springfox:springfox-swagger-ui:2.9.2')
//    compile('io.springfox:springfox-data-rest:2.9.2') // to include Spring Data Rest Swagger doc generation // [rj] spring data rest *not* consistent with expected results 
	
	// ### Utilities ###
	
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	// https://mvnrepository.com/artifact/org.flywaydb/flyway-core
	// compile group: 'org.flywaydb', name: 'flyway-core', version: '5.0.7' // org.flywaydb.core.internal.exception.FlywayEnterpriseUpgradeRequiredException: Flyway Enterprise or Oracle upgrade required: Oracle 11 is past regular support by Oracle and no longer supported by Flyway Open Source or Pro, but still supported by Flyway Enterprise.
	compile group: 'org.flywaydb', name: 'flyway-core', version: '4.2.0' 	
	
	// https://mvnrepository.com/artifact/ma.glasnost.orika/orika-core
	compile group: 'ma.glasnost.orika', name: 'orika-core', version: '1.5.2'
	// https://mvnrepository.com/artifact/com.google.guava/guava
	compile group: 'com.google.guava', name: 'guava', version: '20.0'
	// https://mvnrepository.com/artifact/org.projectlombok/lombok
	compile group: 'org.projectlombok', name: 'lombok', version: '1.16.20'
	
	// https://mvnrepository.com/artifact/javax.interceptor/javax.interceptor-api
	compile group: 'javax.interceptor', name: 'javax.interceptor-api', version: '1.2'
	

	// ### Persistence ###
	compile('org.springframework.boot:spring-boot-starter-data-jpa')

	// ### Bean Validation (https://beanvalidation.org/2.0/) ###
//	compile('javax.validation:validation-api:2.0.1.Final')
	// https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
	compile group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.0.13.Final'

	// ### Metrics ###
//	compile("org.springframework.boot:spring-boot-starter-actuator") 

	// ### Runtime Standalone ###
	compileOnly 'javax.servlet:javax.servlet-api:3.1.0' // instead of tomcat, this allows seamless deployment to J2EE containers
	testCompileOnly 'javax.servlet:javax.servlet-api:3.1.0' // instead of tomcat, this allows seamless deployment to J2EE containers
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	//providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
	
    // ### Spring Unit Testing ###
	// https://mvnrepository.com/artifact/org.springframework/spring-test
//	testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.16.RELEASE'
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
//	testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.7'	

    // ### Unit Testing ###
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testCompile('org.junit.jupiter:junit-jupiter-api:5.3.1')
	testCompile('org.junit.jupiter:junit-jupiter-params:5.3.1')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.1')	
//	testRuntime('org.junit.vintage:junit-vintage-engine:5.3.1')	 // for running JUnit 4 tests (TagitCore v2.x)
	
	// https://mvnrepository.com/artifact/org.mockito/mockito-core
	// https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito2
//	testCompile('org.powermock:powermock-api-mockito2:1.7.4')
    testCompile('org.mockito:mockito-core:2.23.4')
    testCompile('org.mockito:mockito-junit-jupiter:2.23.4')

	// [rj.added.20170705] for local testing with Oracle
	compile files('lib/oracle/ojdbc7.jar')
	// [rj.added.20170705] for local testing with MS SQL
	compile files('lib/sqlserver/sqljdbc4.jar')
}


task cleanPackages (type: Delete){
	// Tagit Common Core XSDs are generated automatically due to dependency in XSD creation. These must be deleted as it should be referred to the tagit-core.jar.
	// delete fileTree(dir: 'src/main/java/com/tagit/commons/core')
	// delete fileTree(dir: 'src/main/java/org')
	// Tagit Commons Biller XSDs are generated automatically due to dependency in XSD creation. These must be deleted as it should be referred to the tagit-biller.jar.
    // delete fileTree(dir: 'src/main/java/com/tagit/commons/biller') 
	outputs.upToDateWhen { false }
}


// By default, when the bootJar or bootWar tasks are configured, the jar or war tasks are disabled. A project can be configured to build both an executable archive and a normal archive at the same time by enabling the jar or war task:
jar {
	enabled = true
}

//war {
//    manifest {
//		attributes("Specification-Title": "${projectName}")
//		attributes("Specification-Version": version + "-b" + getDate())
//		attributes("Specification-Vendor": "Tagit Pte Ltd")        
//    }
//}

// To avoid the executable archive and the normal archive from being written to the same location, one or the other should be configured to use a different location. One way to do so is by configuring a classifier:
bootJar {
	classifier = 'boot'
	launchScript() // Spring Boot provides support for fully executable archives. An archive is made fully executable by prepending a shell script that knows how to launch the application. On Unix-like platforms, this launch script allows the archive to be run directly like any other executable or to be installed as a service.
	
	from('src/main/webapp') {
        into '/public'
    }	
}

def getDate() {
    return new Date().format('yyyyMMddHHmmss')
}

// Gradle Task for Consolidating Deployable Files
task deploy(type: Copy) {
	from jar
    from  "" + project.buildDir + "/libs"
    include '**/*.jar'
	include '**/*.war'
    into "deploy"
}

test.onlyIf {
	Boolean.getBoolean('skip.tests')
}

test {
	ignoreFailures = true
    useJUnitPlatform()
}

// Gradle Task for Java Documentation
task genDoc(type: Javadoc) {
  source = sourceSets.main.allJava
  classpath = configurations.compile // ensure your dependencies are using compile
  destinationDir = file('javadoc/')
//  exclude "**/domain/**"
  title = "${projectName}"
}

// Gradle Task for Consolidating Dependencies
task copyProjectDependencies << {
    file("build/project-dependencies").deleteDir()
    copy {
        from project.jar
        from project.configurations.runtime
        into "build/project-dependencies/jars"
    }
    subprojects.findAll().each { project ->
        copy {
            from project.jar
            from project.configurations.runtime
            into "build/project-dependencies/jars"
        }
    }
}

defaultTasks 'clean', 'eclipse', 'build', 'bootJar', 'deploy', 'genDoc', 'htmlDependencyReport'
